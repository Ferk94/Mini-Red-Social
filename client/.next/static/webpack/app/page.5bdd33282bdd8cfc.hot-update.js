"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/lib/api.ts":
/*!****************************!*\
  !*** ./src/app/lib/api.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPost: () => (/* binding */ createPost),\n/* harmony export */   deletePost: () => (/* binding */ deletePost),\n/* harmony export */   getPosts: () => (/* binding */ getPosts),\n/* harmony export */   likePost: () => (/* binding */ likePost)\n/* harmony export */ });\nconst BASE_URL = \"http://localhost:3000/api\";\nasync function getPosts() {\n    const res = await fetch(\"\".concat(BASE_URL, \"/posts\"));\n    console.log(res, 'que tenemos en res del backend?');\n    if (!res.ok) throw new Error('Error al traer los posts');\n    return res.json();\n}\nasync function createPost(name, message) {\n    const res = await fetch(\"\".concat(BASE_URL, \"/posts\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            name,\n            message\n        })\n    });\n    if (!res.ok) throw new Error('Error al crear el post');\n    return res.json();\n}\nasync function likePost(id) {\n    const res = await fetch(\"\".concat(BASE_URL, \"/posts/\").concat(id, \"/like\"), {\n        method: 'POST'\n    });\n    if (!res.ok) throw new Error('Error al darle like');\n    return res.json();\n}\nasync function deletePost(id) {\n    const res = await fetch(\"\".concat(BASE_URL, \"/posts/\").concat(id), {\n        method: 'DELETE'\n    });\n    if (!res.ok) throw new Error('Error al eliminar el post');\n    return res.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbGliL2FwaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsV0FBV0MsMkJBQW9DO0FBRTlDLGVBQWVHO0lBQ3BCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSxHQUFZLE9BQVROLFVBQVM7SUFDcENPLFFBQVFDLEdBQUcsQ0FBQ0gsS0FBSztJQUNqQixJQUFJLENBQUNBLElBQUlJLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07SUFDN0IsT0FBT0wsSUFBSU0sSUFBSTtBQUNqQjtBQUVPLGVBQWVDLFdBQVdDLElBQVksRUFBRUMsT0FBZTtJQUM1RCxNQUFNVCxNQUFNLE1BQU1DLE1BQU0sR0FBWSxPQUFUTixVQUFTLFdBQVM7UUFDM0NlLFFBQVE7UUFDUkMsU0FBUztZQUFFLGdCQUFnQjtRQUFtQjtRQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVOO1lBQU1DO1FBQVE7SUFDdkM7SUFDQSxJQUFJLENBQUNULElBQUlJLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07SUFDN0IsT0FBT0wsSUFBSU0sSUFBSTtBQUNqQjtBQUVPLGVBQWVTLFNBQVNDLEVBQVU7SUFDdkMsTUFBTWhCLE1BQU0sTUFBTUMsTUFBTSxHQUFxQmUsT0FBbEJyQixVQUFTLFdBQVksT0FBSHFCLElBQUcsVUFBUTtRQUN0RE4sUUFBUTtJQUNWO0lBQ0EsSUFBSSxDQUFDVixJQUFJSSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO0lBQzdCLE9BQU9MLElBQUlNLElBQUk7QUFDakI7QUFFTyxlQUFlVyxXQUFXRCxFQUFVO0lBQ3pDLE1BQU1oQixNQUFNLE1BQU1DLE1BQU0sR0FBcUJlLE9BQWxCckIsVUFBUyxXQUFZLE9BQUhxQixLQUFNO1FBQ2pETixRQUFRO0lBQ1Y7SUFDQSxJQUFJLENBQUNWLElBQUlJLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07SUFDN0IsT0FBT0wsSUFBSU0sSUFBSTtBQUNqQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBbGJlcnRvXFxEZXNrdG9wXFxwcm9qZWN0c1xcbWluaSByZWQgc29jaWFsXFxjbGllbnRcXHNyY1xcYXBwXFxsaWJcXGFwaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9CQVNFX1VSTCE7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L3Bvc3RzYCk7XHJcbiAgY29uc29sZS5sb2cocmVzLCAncXVlIHRlbmVtb3MgZW4gcmVzIGRlbCBiYWNrZW5kPycpXHJcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRXJyb3IgYWwgdHJhZXIgbG9zIHBvc3RzJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVQb3N0KG5hbWU6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L3Bvc3RzYCwge1xyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgbWVzc2FnZSB9KSxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBhbCBjcmVhciBlbCBwb3N0Jyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsaWtlUG9zdChpZDogc3RyaW5nKSB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L3Bvc3RzLyR7aWR9L2xpa2VgLCB7XHJcbiAgICBtZXRob2Q6ICdQT1NUJyxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBhbCBkYXJsZSBsaWtlJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVQb3N0KGlkOiBzdHJpbmcpIHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtCQVNFX1VSTH0vcG9zdHMvJHtpZH1gLCB7XHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gIH0pO1xyXG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGFsIGVsaW1pbmFyIGVsIHBvc3QnKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufVxyXG4iXSwibmFtZXMiOlsiQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0JBU0VfVVJMIiwiZ2V0UG9zdHMiLCJyZXMiLCJmZXRjaCIsImNvbnNvbGUiLCJsb2ciLCJvayIsIkVycm9yIiwianNvbiIsImNyZWF0ZVBvc3QiLCJuYW1lIiwibWVzc2FnZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImxpa2VQb3N0IiwiaWQiLCJkZWxldGVQb3N0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/lib/api.ts\n"));

/***/ })

});